{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["document.head.insertAdjacentHTML(\"beforeend\", `<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n<link href=\"https://fonts.googleapis.com/css2?family=Montserrat:ital@0;1&display=swap\" rel=\"stylesheet\"><link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\"><link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">`);\n\nimport flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\nlet userSelectedDate = null;\nlet intervalId = null;\nconst startBtn = document.querySelector(\"[data-start]\");\nstartBtn.disabled = true;\nconst datetimePicker = document.querySelector(\"#datetime-picker\");\ndatetimePicker.classList.add('datetime-picker');\n\nconst options = {\n    enableTime: true,\n   dateFormat: \"Y-m-d H:i\",\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n      const selectedDate = selectedDates[0];\n      if (selectedDate <= new Date()) {\n          iziToast.error({\n              position: 'topCenter',\n              messageColor: 'white',\n              backgroundColor: '#ef4040',\n              progressBarColor: 'red',\n              theme: 'light',\n              icon: 'fa-regular fa-circle-xmark fa-beat',\n              iconColor: 'white',\n              message: \"Please choose a date in the future\", });\n      }\n      else {\n          userSelectedDate = selectedDate;\n          startBtn.disabled = false;\n          startBtn.style.backgroundColor = \"#4e75ff\";\n          startBtn.style.color = \"#fff\";\n          datetimePicker.style.border = \"1px solid #4e75ff\";\n      }\n  },\n};\n\nflatpickr(\"#datetime-picker\", options);\n\nstartBtn.addEventListener(\"click\", () => {\n    if (!userSelectedDate) return;\n    startBtn.disabled = true;\n    datetimePicker.disabled = true;\n    datetimePicker.style.backgroundColor = \"#fafafa\";\n    datetimePicker.style.border = \"1px solid #808080\";\n    startBtn.style.backgroundColor = \"#cfcfcf\";\n    startBtn.style.color = \"#989898\";\n    intervalId = setInterval(() => {\n        const currentTime = new Date();\n        const timeDifference = userSelectedDate - currentTime;\n        if (timeDifference <= 0) {\n            clearInterval(intervalId);\n            addLeadingZero(0);\n            datetimePicker.disabled = false;\n           datetimePicker.style.backgroundColor = \"white\";\n            datetimePicker.style.border = \"1px solid #808080\";\n             startBtn.style.backgroundColor = \"#cfcfcf\";\n    startBtn.style.color = \"#989898\";\n            return;\n        }\n        addLeadingZero(timeDifference);\n    }, 1000);\n});\n\nfunction addLeadingZero(ms) {\n    const { days, hours, minutes, seconds } = convertMs(ms);\n    document.querySelector(\"[data-days]\").textContent = days;\n    document.querySelector(\"[data-hours]\").textContent = String(hours).padStart(2, '0');\n    document.querySelector(\"[data-minutes]\").textContent = String(minutes).padStart(2, '0');\ndocument.querySelector(\"[data-seconds]\").textContent = String(seconds).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconsole.log(convertMs(2000)); \nconsole.log(convertMs(140000)); \nconsole.log(convertMs(24140000)); \n\n\n\n"],"names":["userSelectedDate","intervalId","startBtn","datetimePicker","options","selectedDates","selectedDate","iziToast","flatpickr","timeDifference","addLeadingZero","ms","days","hours","minutes","seconds","convertMs"],"mappings":"+IAAA,SAAS,KAAK,mBAAmB,YAAa;AAAA;AAAA,qUAEuR,EAQrU,IAAIA,EAAmB,KACnBC,EAAa,KACjB,MAAMC,EAAW,SAAS,cAAc,cAAc,EACtDA,EAAS,SAAW,GACpB,MAAMC,EAAiB,SAAS,cAAc,kBAAkB,EAChEA,EAAe,UAAU,IAAI,iBAAiB,EAE9C,MAAMC,EAAU,CACZ,WAAY,GACb,WAAY,YACb,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnB,MAAMC,EAAeD,EAAc,CAAC,EAChCC,GAAgB,IAAI,KACpBC,EAAS,MAAM,CACX,SAAU,YACV,aAAc,QACd,gBAAiB,UACjB,iBAAkB,MAClB,MAAO,QACP,KAAM,qCACN,UAAW,QACX,QAAS,oCAAoC,CAAG,GAGpDP,EAAmBM,EACnBJ,EAAS,SAAW,GACpBA,EAAS,MAAM,gBAAkB,UACjCA,EAAS,MAAM,MAAQ,OACvBC,EAAe,MAAM,OAAS,oBAErC,CACH,EAEAK,EAAU,mBAAoBJ,CAAO,EAErCF,EAAS,iBAAiB,QAAS,IAAM,CAChCF,IACLE,EAAS,SAAW,GACpBC,EAAe,SAAW,GAC1BA,EAAe,MAAM,gBAAkB,UACvCA,EAAe,MAAM,OAAS,oBAC9BD,EAAS,MAAM,gBAAkB,UACjCA,EAAS,MAAM,MAAQ,UACvBD,EAAa,YAAY,IAAM,CAE3B,MAAMQ,EAAiBT,EADH,IAAI,KAExB,GAAIS,GAAkB,EAAG,CACrB,cAAcR,CAAU,EACxBS,EAAe,CAAC,EAChBP,EAAe,SAAW,GAC3BA,EAAe,MAAM,gBAAkB,QACtCA,EAAe,MAAM,OAAS,oBAC7BD,EAAS,MAAM,gBAAkB,UAC1CA,EAAS,MAAM,MAAQ,UACf,MACH,CACDQ,EAAeD,CAAc,CAChC,EAAE,GAAI,EACX,CAAC,EAED,SAASC,EAAeC,EAAI,CACxB,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAE,EACtD,SAAS,cAAc,aAAa,EAAE,YAAcC,EACpD,SAAS,cAAc,cAAc,EAAE,YAAc,OAAOC,CAAK,EAAE,SAAS,EAAG,GAAG,EAClF,SAAS,cAAc,gBAAgB,EAAE,YAAc,OAAOC,CAAO,EAAE,SAAS,EAAG,GAAG,EAC1F,SAAS,cAAc,gBAAgB,EAAE,YAAc,OAAOC,CAAO,EAAE,SAAS,EAAG,GAAG,CACtF,CAEA,SAASC,EAAUL,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,QAAQ,IAAIC,EAAU,GAAI,CAAC,EAC3B,QAAQ,IAAIA,EAAU,IAAM,CAAC,EAC7B,QAAQ,IAAIA,EAAU,MAAQ,CAAC"}