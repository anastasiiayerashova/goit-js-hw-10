{"version":3,"file":"2-snackbar.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\ndocument.head.insertAdjacentHTML(\"beforeend\", `<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n<link href=\"https://fonts.googleapis.com/css2?family=Montserrat:ital@0;1&display=swap\" rel=\"stylesheet\"><link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\n`);\n\nconst form = document.querySelector(\".form\");\nconst labelElement = document.querySelector('label');\nlabelElement.classList.add(\"css-delay\");\n    \nform.addEventListener(\"submit\", (event) => {\n    event.preventDefault();\n    const delayInput = document.querySelector(\"input[name='delay']\");\n    const inputF = document.querySelector(\"input[value='fulfilled']\").checked;\n    const inputR = document.querySelector(\"input[value='rejected']\").checked;\n  \n    let delay = Number(delayInput.value);\n    \n    const fetchData = ({ value, delay, isSuccess }) => {\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                if (isSuccess) {\n                    resolve(value);\n                }\n                else {\n                    reject(value);\n                }\n            }, delay);\n        });\n    }\n\n    if (inputF) {\n        fetchData({\n            value: `Fulfilled promise in ${delay}ms`,\n            delay: delay,\n            isSuccess: true,\n        }).then(value => iziToast.success({\n            title: \"OK\",\n            titleColor: \"white\",\n              position: 'topCenter',\n              messageColor: 'white',\n              backgroundColor: 'lightgreen',\n              progressBarColor: 'black',\n              theme: 'light',\n            icon: 'fa-solid fa-check',\n            iconColor: \"white\",\n              class: \"custom-toast\",\n              message: value, }));\n    }\n    \n    else if (inputR) {\n        fetchData({\n            value: `Rejected promise in ${delay}ms`,\n            delay: delay,\n            isSuccess: false,\n        }).catch(error => iziToast.error({\n            class: \"custom-toast\",\n              position: 'topCenter',\n              messageColor: 'white',\n              backgroundColor: 'red',\n              progressBarColor: 'black',\n              theme: 'light',\n            icon: 'fa-solid fa-xmark',\n              iconColor: \"white\",\n              message: error, }));\n    }\n});\n    \n"],"names":["form","labelElement","event","delayInput","inputF","inputR","delay","fetchData","value","isSuccess","resolve","reject","iziToast","error"],"mappings":"wIAGA,SAAS,KAAK,mBAAmB,YAAa;AAAA;AAAA;AAAA,CAG7C,EAED,MAAMA,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAe,SAAS,cAAc,OAAO,EACnDA,EAAa,UAAU,IAAI,WAAW,EAEtCD,EAAK,iBAAiB,SAAWE,GAAU,CACvCA,EAAM,eAAc,EACpB,MAAMC,EAAa,SAAS,cAAc,qBAAqB,EACzDC,EAAS,SAAS,cAAc,0BAA0B,EAAE,QAC5DC,EAAS,SAAS,cAAc,yBAAyB,EAAE,QAEjE,IAAIC,EAAQ,OAAOH,EAAW,KAAK,EAEnC,MAAMI,EAAY,CAAC,CAAE,MAAAC,EAAO,MAAAF,EAAO,UAAAG,CAAS,IACjC,IAAI,QAAQ,CAACC,EAASC,IAAW,CACpC,WAAW,IAAM,CACTF,EACAC,EAAQF,CAAK,EAGbG,EAAOH,CAAK,CAEnB,EAAEF,CAAK,CACpB,CAAS,EAGDF,EACAG,EAAU,CACN,MAAO,wBAAwBD,CAAK,KACpC,MAAOA,EACP,UAAW,EACd,CAAA,EAAE,KAAKE,GAASI,EAAS,QAAQ,CAC9B,MAAO,KACP,WAAY,QACV,SAAU,YACV,aAAc,QACd,gBAAiB,aACjB,iBAAkB,QAClB,MAAO,QACT,KAAM,oBACN,UAAW,QACT,MAAO,eACP,QAASJ,CAAQ,CAAA,CAAC,EAGnBH,GACLE,EAAU,CACN,MAAO,uBAAuBD,CAAK,KACnC,MAAOA,EACP,UAAW,EACd,CAAA,EAAE,MAAMO,GAASD,EAAS,MAAM,CAC7B,MAAO,eACL,SAAU,YACV,aAAc,QACd,gBAAiB,MACjB,iBAAkB,QAClB,MAAO,QACT,KAAM,oBACJ,UAAW,QACX,QAASC,CAAQ,CAAA,CAAC,CAEhC,CAAC"}